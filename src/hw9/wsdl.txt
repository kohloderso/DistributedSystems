Benchmarks:
benchmarking web service
1 Addition: 42.39 ms
benchmarking direct call to member function
1 Addition: 0.0 ms
benchmarking RMI
1 Addition: 0.3 msms
benchmarking sockets
1 Addition: 1.53 ms




<?xml version="1.0" encoding="UTF-8"?><!-- Published by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.2.9-b130926.1035 svn-revision#5f6196f2b90e9460065a4c2f4e30e065b245e51e. --><!-- Generated by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.2.9-b130926.1035 svn-revision#5f6196f2b90e9460065a4c2f4e30e065b245e51e. --><definitions
xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" 
xmlns:wsp="http://www.w3.org/ns/ws-policy" 
xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" 
xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" 
xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" 
xmlns:tns="http://server/" 
xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
xmlns="http://schemas.xmlsoap.org/wsdl/" 
targetNamespace="http://server/" 
name="CompImplService">
<types></types>



//Explanation

<types>	Defines the (XML Schema) data types used by the web service
<message>	Defines the data elements for each operation
<portType>	Describes the operations that can be performed and the messages involved.
<binding>	Defines the protocol and data format for each port type

Types– a container for data type definitions using some type system (such as XSD).
Message– an abstract, typed definition of the data being communicated.
Operation– an abstract description of an action supported by the service.
Port Type–an abstract set of operations supported by one or more endpoints.
Binding– a concrete protocol and data format specification for a particular port type.
Port– a single endpoint defined as a combination of a binding and a network address.
Service– a collection of related endpoints.

// this messag describes the add operation, here we see that add has 2 parameters both of type int

<message name="add">
<part name="arg0" type="xsd:int"></part>
<part name="arg1" type="xsd:int"></part>
</message>

// describes the response message from the server to the client, here the result of the add operation with one parameter with the type integer

<message name="addResponse">
<part name="return" type="xsd:int"></part>
</message>


//describes all funtions the service offers, sort of a library

<portType name="Comp">
<operation name="add" parameterOrder="arg0 arg1">

//with this the incoming message gets mapped to the function with parameters	

	<input wsam:Action="http://server/Comp/addRequest" 
	message="tns:add"></input>

//outgoing message/Result of the computation

	<output wsam:Action="http://server/Comp/addResponse" 	
	message="tns:addResponse"></output>
</operation>

//name is unique among bindings and type argument is reference to the portType

<binding name="CompImplPortBinding" type="tns:Comp">
	
//style is "Remote Procedure Call" for accessing methods, transport defines the protocol to use, in our case SOAP is used to send Data
	
<soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"></soap:binding>
	<operation name="add">
	<soap:operation soapAction=""></soap:operation>
	<input>
		<soap:body use="literal" namespace="http://server/"></soap:body>
	</input>
	<output>
		<soap:body use="literal" namespace="http://server/"></soap:body>
	</output>
	</operation>
</binding>

//offered Service

<service name="CompImplService">
	
//Port is bound to the service
	
<port name="CompImplPort" binding="tns:CompImplPortBinding">
	
//adress to access the operation port
	
<soap:address location="http://localhost:8001/hw9/server"></soap:address>
</port>
</service>
</definitions>
